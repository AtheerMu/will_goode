{"version":3,"sources":["Components/Search.jsx","Components/Anime.jsx","Components/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["getRandomAnime","titles","Math","floor","random","length","Search","props","useState","q","setQ","results","setResults","useEffect","axios","get","then","res","console","log","data","catch","err","error","onSubmit","e","preventDefault","onSearch","className","type","placeholder","onChange","target","value","slice","map","anime","onClick","select","title","mal_id","Anime","src","image_url","alt","style","width","score","synopsis","History","history","App","result","setResult","setHistory","newSearch","arr","newArr","item","exists","push","dedupe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01dfc61a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction getRandomAnime() {\n  const titles = [\"Boku no Hero Academia\", \"Cowboy Bebop\", \"Katanagatari\", \"FLCL\", \"Demon Slayer\", \"Fate/Zero\", \"Detective Conan\", \"Sailor Moon\", \"Monster\", \"Legend of Galactic Heroes\", \"Luckyâ˜†Star\", \"Jojo's Bizarre Adventure\", \"Pretty Cure\"];\n  return titles[Math.floor(Math.random() * titles.length)];\n}\n\nconst Search = props => {\n\n  const [q, setQ] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    // console.log(\"The query is being changed\", q);\n    if(q.length > 2) {\n      axios.get(`https://api.jikan.moe/v3/search/anime?q=${q}`)\n        .then(res => {\n          console.log(res);\n          setResults(res.data.results);\n        }).catch(err => console.error(err));\n      // console.log(\"SEARCHING!!!\")\n    } else {\n      setResults([]);\n    }\n  }, [q]);\n\n  const search = e => {\n    e.preventDefault();\n    if(results.length > 0) {\n      props.onSearch(results[0]);\n    }\n    setQ(\"\");\n    setResults([]);\n  }\n\n  const select = anime => {\n    props.onSearch(anime);\n    setQ(\"\");\n    setResults([]);\n  }\n\n  return (\n    <>\n    <form onSubmit={search}>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">Search for an anime like...</span>\n        </div>\n        <input type=\"search\" className=\"form-control\" placeholder={getRandomAnime()} onChange={e => setQ(e.target.value)} value={q} />\n        <div className=\"input-group-prepend\">\n          <input type=\"submit\" value=\"GO!\" className=\"btn btn-primary\" />\n        </div>\n      </div>\n    </form>\n    <div className=\"card\">\n      <ul className=\"list-group list-group-flush\">\n        {results.slice(0, 5).map(anime =>\n          <li key={anime.mal_id} className=\"list-group-item\" onClick={e => select(anime)}>\n            {anime.title}\n            <button className=\"btn btn-sm btn-outline-secondary float-right\">View</button>\n          </li>\n        )}\n      </ul>\n    </div>\n    </>\n  );\n\n}\n\nexport default Search;","import React from 'react';\n\nconst Anime = props => {\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header bg-primary text-light\">{props.anime.title}</div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\">\n            <img src={props.anime.image_url} alt=\"img\" style={{width: \"100%\"}} />\n          </div>\n          <div className=\"col-sm-9\">\n            <h4>Score: {props.anime.score}</h4>\n            <p>{props.anime.synopsis}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Anime;","import React from 'react';\n\n\nconst History = props => {\n\n  return (\n    <ul className=\"list-group\">\n      {props.history.map(anime => \n        <li className=\"list-group-item\" onClick={e => props.onSearch(anime)}>{anime.title}</li>  \n      )}\n    </ul>\n  )\n\n}\n\nexport default History;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Search from './Components/Search'; \nimport Anime from './Components/Anime';\nimport History from './Components/History';\nimport './App.css';\n\n\nfunction dedupe(arr) {\n  const newArr = [];\n  for(let item of arr) {\n    console.log(item);\n    // we can use the `id` to compare the objects\n    let exists = false;\n    for(let thing of newArr) {\n      if(thing.mal_id === item.mal_id) {\n        exists = true;\n        break\n      }\n    }\n    if(!exists) {\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}\n\n\nconst App = props => {\n\n  const [result, setResult] = useState({});\n  const [history, setHistory] = useState([]);\n\n  const newSearch = anime => {\n    setResult(anime);\n    setHistory(dedupe([anime, ...history]));\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron bg-primary text-light\">\n        <h1>AniApi</h1>\n      </div>\n      <Search onSearch={newSearch} />\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          <h4 className=\"my-3\">Showing results...</h4>\n          {/* { JSON.stringify(result) } */}\n          { result.title ? <Anime anime={result} /> : \"\" }\n        </div>\n        <div className=\"col-sm-4\">\n          <h4 className=\"my-3\">Past Searches</h4>\n          <History history={history} onSearch={newSearch} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}